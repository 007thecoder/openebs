- hosts: localhost
 
  vars_files: 
    - k8s-percona-pod-vars.yml 
 
  tasks:

    - name: Get $HOME of K8s master for kubernetes user
      shell: source ~/.profile; echo $HOME
      args: 
        executable: /bin/bash
      register: result_kube_home
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Download YAML for percona mysql plugin
      get_url: 
        url: "{{ percona_mysql_plugin_link }}"
        dest: "{{ result_kube_home.stdout }}/{{ pod_yaml_alias }}"
        force: yes
      register: result
      until:  "'OK' in result.msg"
      delay: 5
      retries: 3
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Check whether maya-apiserver pod is deployed
      shell: source ~/.profile; kubectl get pods | grep maya-apiserver
      args: 
        executable: /bin/bash
      register: result
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"     

    - name: 
      debug: 
        msg: "Ending play, maya-apiserver is not running"
      when: "'Running' not in result.stdout"

    - name: 
      meta: end_play
      when: "'Running' not in result.stdout"
    
    - name: Replace volume size in plugin YAML
      lineinfile:
        path: "{{ result_kube_home.stdout }}/{{ pod_yaml_alias }}"
        regexp: "storage:"
        line: "      storage: \"{{percona_mysql_vol_size}}\""
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Deploy percona mysql pod
      shell: source ~/.profile; kubectl create -f {{ pod_yaml_alias }} 
      args: 
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Confirm pod status is running
      shell: source ~/.profile; kubectl get pods | grep percona
      args: 
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      register: result
      until: "'percona' and 'Running' in result.stdout"
      delay: 300 
      retries: 6
     
    - name: Get $HOME of K8s minion for kubernetes user
      shell: source ~/.profile; echo $HOME
      args:
        executable: /bin/bash
      register: result_kube_home
      delegate_to: "{{groups['kubernetes-kubeminions'].0}}"

    - name: Get IP address of percona mysql pod
      shell: source ~/.profile; kubectl describe pod percona 
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      register: result_IP

    - name: Set IP of Pod to variable
      set_fact:
        pod_ip: "{{ result_IP.stdout_lines[7].split()[1] }}"

    - name: Copy files into kube minion
      copy:
        src: "{{ item }}"
        dest: "{{ result_kube_home.stdout }}"
      with_items: "{{ files }}"
      delegate_to: "{{ groups['kubernetes-kubeminions'].0 }}"

    - name: Build the mysql-client image
      docker_image:
        name: mysql-client
        state: present
        path: "{{ result_kube_home.stdout }}"
        rm: true
        timeout: 600
      become: true
      delegate_to: "{{ groups['kubernetes-kubeminions'].0 }}"

    - name: mysql-client docker instantiate
      docker_container:
        name: client
        image: mysql-client
        network_mode: host
        command: timelimit -t {{ mysql_load_duration }} sh MySQLLoadGenerate.sh {{ pod_ip }} > /dev/null 2>&1
        state: started
      become: true
      delegate_to: "{{ groups['kubernetes-kubeminions'].0 }}"
