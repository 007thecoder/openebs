- hosts: localhost
 
  vars_files: 
    - test-k8s-percona-mysql-pod-vars.yml
 
  tasks:

    - name: Get $HOME of K8s master for kubernetes user
      shell: source ~/.profile; echo $HOME
      args: 
        executable: /bin/bash
      register: result_kube_home
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Download YAML for mysql plugin
      get_url: 
        url: "{{ percona_mysql_plugin_link }}"
        dest: "{{ result_kube_home.stdout }}/{{ pod_yaml_alias }}"
        force: yes
      register: result
      until:  "'OK' in result.msg"
      delay: 5
      retries: 3
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Get m-API server info 
      shell: source ~/.profile; maya omm-status
      args: 
        executable: /bin/bash
      register: result
      delegate_to: "{{groups['openebs-mayamasters'].0}}"     
      ignore_errors: true
      no_log: true
 
    - name: 
      debug: 
        msg: "Ending play, m-apiserver is unreachable"
      when: "'m-apiserver' not in result.stderr"

    - name: 
      meta: end_play
      when: "'m-apiserver' not in result.stderr"
    
    - name: Fetch m-API server location    
      shell: echo "{{result.stderr}}" | grep -i 'm-apiserver' | awk '{print $4}'
      register: result_mAPI

    - name: Replace mAPI server location in plugin YAML
      lineinfile:
        path: "{{ result_kube_home.stdout }}/{{ pod_yaml_alias }}"
        regexp: "openebsApiUrl:"
        line: "        openebsApiUrl: \"{{result_mAPI.stdout}}/latest\""
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}" 
            
    - name: Replace volume size in plugin YAML
      lineinfile:
        path: "{{ result_kube_home.stdout }}/{{ pod_yaml_alias }}"
        regexp: "size:"
        line: "        size: \"{{percona_mysql_vol_size}}\""
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Deploy percona mysql pod
      shell: source ~/.profile; kubectl create -f {{ pod_yaml_alias }} 
      args: 
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Confirm pod status is running
      shell: source ~/.profile; kubectl get pods
      args: 
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      register: result
      until: "'Running' in result.stdout_lines[1]"
      delay: 300 
      retries: 6
      
